{"version":3,"sources":["anh_1.JPG","logo.svg","anh_2.JPG","components/VacancySign.js","components/EgDefaultProps.js","components/EgState.js","components/EgSetState.js","components/EgForceUpdate.js","components/EgDom.js","components/LifeCycle.js","App.js","serviceWorker.js","components/IntroduceYourself.js","index.js"],"names":["module","exports","__webpack_require__","p","VacancySign","textApp","this","props","hasvacancy","react_default","a","createElement","Component","UserInfo","name","email","React","defaultProps","EgState","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","seconds","EgSetState","data","setStateHandler","bind","assertThisInitialized","myArray","slice","push","setState","onClick","EgForceUpdate","test","forceUpdateHandler","forceUpdate","Math","random","EgDom","findDomNodeHandler","document","getElementById","ReactDOM","findDOMNode","style","color","id","LifeCycle","setTime","LifeCycle_Content","myTime","Content","console","log","newProps","newState","nextProps","nextState","prevProps","prevState","Boolean","window","location","hostname","match","IntroduceYourself","age","sex","country","companny","dataimg","avartar","avartar_1","nextImageHandler","updateAvarta","avartar_2","className","textAlign","src","maxWidth","alt","render","components_IntroduceYourself","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.22b9a349.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anh_1.1898195e.JPG\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/anh_2.3e1c947d.JPG\";","import React, { Component } from 'react';\n\nclass VacancySign extends Component{\n  render(){\n    var textApp = (this.props.hasvacancy === true) ? 'Vanacy' : 'No Vanacy';\n\n    return (\n      <div>\n        <h1>{textApp}</h1>\n      </div>\n    )\n  }\n}\n\nexport default VacancySign;","import React from 'react';\n\nclass UserInfo extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Nane: {this.props.name}</p>\n\t\t\t\t<p>Email: {this.props.email}</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nUserInfo.defaultProps = {\n\tname: \"anh\",\n\temail: \"anh@gmail.com\"\n}\n\nexport default UserInfo;","import React, { Component } from 'react';\n\nclass EgState extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {seconds: 2};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1> Counter </h1>\n\t\t\t\t<h2> Seconds: {this.state.seconds} s</h2>\n\t\t\t</div>\n\t\t)\n\t}\t\n}\nexport default EgState;","import React, { Component } from 'react';\n\nclass EgSetState extends Component {\n\tconstructor() {\n\t  \tsuper();\n\t\t\n\t  \tthis.state = {\n\t    \tdata: []\n\t  \t}\n\n\t  \tthis.setStateHandler = this.setStateHandler.bind(this);\n\t};\n\n\tsetStateHandler() {\n\t\tvar item = \"setState...\"\n\t  \tvar myArray = this.state.data.slice();\n\t  \tmyArray.push(item);\n\t  \tthis.setState({data: myArray})\n\t};\n\n\trender() {\n\t  \treturn (\n\t     \t<div>\n\t        \t<button onClick = {this.setStateHandler}>SET STATE</button>\n\t        \t<h4>State Array: {this.state.data}</h4>\n\t     \t</div>\n\t  \t);\n\t}\n}\nexport default EgSetState;\n","import React, { Component } from 'react';\n\nclass EgForceUpdate extends Component {\n\tconstructor() {\n\t  \tsuper();\n\t\tthis.test = '1111';\n\t  \tthis.forceUpdateHandler = this.forceUpdateHandler.bind(this);\n\n\t};\n\n\tforceUpdateHandler() {\n\t\tthis.forceUpdate()\n\t\tthis.test = '22222';\n\t};\n\n\trender() {\n      \treturn (\n         \t<div>\n            \t<button onClick = {this.forceUpdateHandler}>FORCE UPDATE</button>\n            \t<h4>Random number: {Math.random()}</h4>\n            \t<p>{this.test}</p>\n         \t</div>\n      \t);\n   \t}\n}\nexport default EgForceUpdate;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nclass EgDom extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.findDomNodeHandler = this.findDomNodeHandler.bind(this);\n\t}\n\n\tfindDomNodeHandler() {\n\t\tvar name = document.getElementById('name');\n\t\tReactDOM.findDOMNode(name).style.color = 'red';\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<button onClick = {this.findDomNodeHandler}>Change Color</button>\n\t\t\t\t<div id=\"name\">Node</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default EgDom;","import React from 'react';\n\nclass LifeCycle extends React.Component {\n\tconstructor(props) {\n    \tsuper(props);\n      \n      \tthis.state = {\n         \tdata: 0\n      \t}\n\n      \tthis.setTime = this.setTime.bind(this)\n   };\n\n   \tsetTime() {\n      \tthis.setState({data: this.state.data + 1})\n   \t}\n\n   \trender() {\n    \treturn (\n         \t<div>\n            \t<button onClick = {this.setTime}>Increase Time</button>\n            \t<Content myTime = {this.state.data}></Content>\n         \t</div>\n      \t);\n   \t}\n}\n\nclass Content extends React.Component {\n\tcomponentWillMount() {\n\t\tconsole.log('Component WILL MOUNT!')\n\t}\n\tcomponentDidMount() {\n\t  \tconsole.log('Component DID MOUNT!')\n\t}\n\tcomponentWillReceiveProps(newProps) {    \n\t  \tconsole.log('Component WILL RECIEVE PROPS!')\n\t}\n\tshouldComponentUpdate(newProps, newState) {\n\t  \treturn true;\n\t}\n\tcomponentWillUpdate(nextProps, nextState) {\n\t  \tconsole.log('Component WILL UPDATE!');\n\t}\n\tcomponentDidUpdate(prevProps, prevState) {\n\t  \tconsole.log('Component DID UPDATE!')\n\t}\n\tcomponentWillUnmount() {\n\t  \tconsole.log('Component WILL UNMOUNT!')\n\t}\n\n\trender() {\n\t  return (\n\t     <div>\n\t        <h3>{this.props.myTime}</h3>\n\t     </div>\n\t  );\n\t}\n}\n\nexport default LifeCycle;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport VacancySign from './components/VacancySign';\nimport UserInfo from './components/EgDefaultProps';\nimport EgState from './components/EgState';\nimport EgSetState from './components/EgSetState';\nimport EgForceUpdate from './components/EgForceUpdate';\nimport EgDom from './components/EgDom';\nimport LifeCycle from './components/LifeCycle';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n         \n            chao mung den voi khoa hoc Reactjs\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n\n        <main className=\"App-main\">\n          <VacancySign hasvacancy={true} /> \n          <hr/>\n          <UserInfo /> \n          <hr/>\n          <EgState /> \n          <hr/>\n          <EgSetState /> \n          <hr/>\n          <EgForceUpdate /> \n          <hr/>\n          <EgDom /> \n          <hr/>\n          <LifeCycle /> \n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\nimport logo from '../logo.svg';\nimport avartar_1 from '../anh_1.JPG';\nimport avartar_2 from '../anh_2.JPG';\nimport '../App.css'\nimport '../bootstrap.css'\n\nclass IntroduceYourself extends Component {\n\tconstructor() {\n\t  \tsuper();\n\t\t\n\t  \tthis.state = {\n\t    \tdata: {\n\t    \t\tname: 'duong duc anh',\n\t    \t\tage: 28,\n\t    \t\tsex: 'male',\n\t    \t\tcountry: 'Ha Tinh',\n\t    \t\tcompanny: 'Shopstack'\t\t\n\t    \t},\n\t    \tdataimg: {\n\t    \t\tavartar: avartar_1\n\t    \t}\n\t  \t}\n\t  \tthis.nextImageHandler = this.nextImageHandler.bind(this);\n\t};\n\n\tnextImageHandler() {\n\t\tvar updateAvarta = (this.state.dataimg.avartar === avartar_1) ? avartar_2 : avartar_1;\n\t  \tthis.setState({dataimg: {avartar: updateAvarta}});\n\t}\n\n\trender() {\n\t  \treturn (\n\t     \t<div>\n\t        \t<div className=\"container\">\n\t\t\t\t  <div className=\"row\">\n\t\t\t\t  \t<div><h1 style={{textAlign: 'center'}}>Introduce Yourself</h1></div>\n\t\t\t\t    <div className=\"col-md-4\">\n\t\t\t\t     \t<div className=\"logo\">\n\t\t\t\t     \t  \t<img src={this.state.dataimg.avartar} className=\"avartar\" style={{maxWidth:200}} alt=\"avartar\" />\n\t\t\t\t     \t  \t<div className=\"nextimg\"><button onClick = {this.nextImageHandler}>Change Image</button></div>\n\t\t\t\t     \t</div>\n\t\t\t\t    </div>\n\t\t\t\t    <div className=\"col-md-8\">\n\t\t\t\t      \t<table className=\"table table-bordered table-striped\">\n\t\t\t\t\t      \t <tbody>\n\t\t\t\t\t      \t \t<tr>\n\t\t\t\t\t\t\t        <td>Name</td>\n\t\t\t\t\t\t\t        <td>{this.state.data.name}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t        <td>Age</td>\n\t\t\t\t\t\t\t        <td>{this.state.data.age}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t        <td>Sex</td>\n\t\t\t\t\t\t\t        <td>{this.state.data.sex}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t        <td>Country</td>\n\t\t\t\t\t\t\t        <td>{this.state.data.country}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t\t\t    <tr>\n\t\t\t\t\t\t\t        <td>Company</td>\n\t\t\t\t\t\t\t        <td>{this.state.data.companny}</td>\n\t\t\t\t\t\t\t    </tr>\n\t\t\t\t\t      \t </tbody>\n\t\t\t\t      \t</table>\n\t\t\t\t    </div>\n\t\t\t\t  </div>\n\t\t\t\t</div>\n\t     \t</div>\n\t  \t);\n\t}\n}\n\nexport default IntroduceYourself;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport IntroduceYourself from './components/IntroduceYourself';\n\n/*ReactDOM.render(<App />, document.getElementById('root'));*/\nReactDOM.render(<IntroduceYourself />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}